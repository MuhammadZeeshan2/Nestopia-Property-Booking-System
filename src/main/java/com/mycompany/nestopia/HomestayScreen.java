/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.nestopia;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khaisarmeliala
 */
public class HomestayScreen extends javax.swing.JFrame {
    
     private Nestopia nestopia;
//
         public HomestayScreen() {
        initComponents();
       // nestopia = new Nestopia(); 
         populatePropertyInfoTable();
    }
private void populatePropertyInfoTable() {
        DefaultTableModel model = (DefaultTableModel) propertyInfotable.getModel();
        model.setRowCount(0); // Clear the table before populating it with new data

        try {
            // Replace this with your database connection logic
//            Connection conn = nestopia.getDatabaseConnection();
Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/nestopia?zeroDateTimeBehavior=CONVERT_TO_NULL&user=root&password=");
           PreparedStatement stmt = conn.prepareStatement("SELECT PropertyName, Address, RentalPrice FROM Properties");
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
            String name = rs.getString("PropertyName");
            String address = rs.getString("Address");
            float price = rs.getFloat("RentalPrice");
            model.addRow(new Object[]{name, address, price});
            }

            // Close the connection and other resources
            rs.close();
            stmt.close();
//            conn.close();
        } catch (SQLException ex) {
            // Handle any SQL errors here
            ex.printStackTrace();
        }
    }
    /**
     * Creates new form HomestayScreen
     */


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        BackHomeButton = new javax.swing.JButton();
        ApplyHomeButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        propertyInfotable = new javax.swing.JTable();
        DeleteHomeButton = new javax.swing.JButton();
        SearchHomeButton = new javax.swing.JButton();
        SearchHome = new javax.swing.JTextField();
        AddressHomeInput = new javax.swing.JTextField();
        PriceHomeInput = new javax.swing.JTextField();
        PropertyNameInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Fahkwang", 0, 18)); // NOI18N
        jLabel1.setText("Home Register");

        BackHomeButton.setText("Back");
        BackHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackHomeButtonActionPerformed(evt);
            }
        });

        ApplyHomeButton.setText("Apply");
        ApplyHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApplyHomeButtonActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel2.setText("Property Address");

        jLabel3.setText("Price (per-day)");

        propertyInfotable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Property Name", "Property Address", "Price (per-day)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        propertyInfotable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(propertyInfotable);
        if (propertyInfotable.getColumnModel().getColumnCount() > 0) {
            propertyInfotable.getColumnModel().getColumn(0).setResizable(false);
            propertyInfotable.getColumnModel().getColumn(1).setResizable(false);
            propertyInfotable.getColumnModel().getColumn(2).setResizable(false);
        }

        DeleteHomeButton.setText("Delete");
        DeleteHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteHomeButtonActionPerformed(evt);
            }
        });

        SearchHomeButton.setBackground(new java.awt.Color(153, 153, 153));
        SearchHomeButton.setText("Search");
        SearchHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchHomeButtonActionPerformed(evt);
            }
        });

        SearchHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchHomeActionPerformed(evt);
            }
        });

        AddressHomeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressHomeInputActionPerformed(evt);
            }
        });

        PropertyNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropertyNameInputActionPerformed(evt);
            }
        });

        jLabel4.setText("Property  Name ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(84, 84, 84))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(DeleteHomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ApplyHomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BackHomeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(74, 74, 74)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AddressHomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PropertyNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PriceHomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchHome, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchHomeButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchHomeButton)
                    .addComponent(SearchHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PropertyNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddressHomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(PriceHomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(181, 181, 181)
                .addComponent(ApplyHomeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BackHomeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackHomeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        HomeScreen homescreen = new HomeScreen();
        homescreen.setVisible(true);
    }//GEN-LAST:event_BackHomeButtonActionPerformed

    private void ApplyHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApplyHomeButtonActionPerformed
                                          
  try {
     String name = PropertyNameInput.getText();
    String address = AddressHomeInput.getText();
    
    float price;
    try {
        price = Float.parseFloat(PriceHomeInput.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid price.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/nestopia?zeroDateTimeBehavior=CONVERT_TO_NULL&user=root&password=");
    PreparedStatement stmt = conn.prepareStatement("INSERT INTO Properties (PropertyName,Address, RentalPrice) VALUES (?, ?,?)");
    stmt.setString(1, name);
    stmt.setString(2, address);
    stmt.setFloat(3, price);
    int rowsAffected = stmt.executeUpdate();

    if (rowsAffected > 0) {
         populatePropertyInfoTable();
        JOptionPane.showMessageDialog(this, "Data inserted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
       
                // Clear the input fields after successful data insertion
            PropertyNameInput.setText("");
            AddressHomeInput.setText("");
            PriceHomeInput.setText("");
    
    } else {
        JOptionPane.showMessageDialog(this, "Failed to insert data.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    stmt.close();
    conn.close();
} catch (SQLException ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "An error occurred while inserting data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}


        
        
    }//GEN-LAST:event_ApplyHomeButtonActionPerformed

    private void DeleteHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteHomeButtonActionPerformed
                                                   
// TODO add your handling code here:
int selectedRow = propertyInfotable.getSelectedRow();
if (selectedRow == -1) {
    // If no row is selected, show an error message
    JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

try {
    DefaultTableModel model = (DefaultTableModel) propertyInfotable.getModel();
      String name  = (String) model.getValueAt(selectedRow, 0);
    String address = (String) model.getValueAt(selectedRow, 1);
    Float rentalPrice = (Float) model.getValueAt(selectedRow, 2);

    // Replace this with your database connection logic
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/nestopia?zeroDateTimeBehavior=CONVERT_TO_NULL&user=root&password=");
    PreparedStatement stmt = conn.prepareStatement("DELETE FROM Properties WHERE PropertyName=? OR Address = ? AND RentalPrice = ?");
    stmt.setString(1, name);
    stmt.setString(2, address);
    stmt.setFloat(3, rentalPrice);

    int rowsAffected = stmt.executeUpdate();

    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(this, "Row deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        model.removeRow(selectedRow);
    } else {
        JOptionPane.showMessageDialog(this, "Failed to delete row.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Close the statement and the connection
    stmt.close();
    conn.close();
} catch (SQLException ex) {
    // Handle any SQL errors here
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "An error occurred while deleting data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    System.out.println("An error occurred while deleting data: " + ex.getMessage());
}



    }//GEN-LAST:event_DeleteHomeButtonActionPerformed

    private void SearchHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchHomeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchHomeButtonActionPerformed

    private void SearchHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchHomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchHomeActionPerformed

    private void AddressHomeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressHomeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressHomeInputActionPerformed

    private void PropertyNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropertyNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PropertyNameInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomestayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomestayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomestayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomestayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomestayScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressHomeInput;
    private javax.swing.JButton ApplyHomeButton;
    private javax.swing.JButton BackHomeButton;
    private javax.swing.JButton DeleteHomeButton;
    private javax.swing.JTextField PriceHomeInput;
    private javax.swing.JTextField PropertyNameInput;
    private javax.swing.JTextField SearchHome;
    private javax.swing.JButton SearchHomeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable propertyInfotable;
    // End of variables declaration//GEN-END:variables
}
